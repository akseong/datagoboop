% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_complex.R
\name{make_complex}
\alias{make_complex}
\title{Function to apply Hilbert transform within each band output by \code{decomp()}}
\usage{
make_complex(d, fs = 44100)
}
\arguments{
\item{d}{output from \code{decomp()}}

\item{fs}{integer: sampling rate of the signal that was passed into \code{decomp()}}
}
\value{
list containing phase \code{phi} and amplitude \code{amp} of the complex waveform
}
\description{
Takes the real-valued output from \code{decomp()} and infers a complex-valued version of each row. This allows us to figure out the amplitude over time ("envelope") and phase of each component sine wave.
}
\examples{
\dontshow{wplayback <- FALSE}
# Create a signal that is a sum of harmonically related sinusoids
fs <- 44100
dur <- 2
t <- seq(0, dur, length.out = dur * fs)
f0 <- 200
n_harm <- 8
y <- sin(2 * pi * f0 * t)
for (k in 2:n_harm) {
  y <- y + sin(2 * pi * k * f0 * t)
}

# Separate the sinusoids
yd <- decomp(y, n_harm = n_harm, fs = fs, f0 = f0)

# Get the envelope and phase of each sinusoid
h <- make_complex(yd, fs = fs)

# Show how the output of make_complex() is related to that of decomp()
from_decomp <- yd[1, 1:2000]
from_make_complex <- h$amp[1, 1:2000] * cos(h$phi[1, 1:2000])
plot(from_decomp, col = "red")
lines(from_make_complex, col = "blue")

}
